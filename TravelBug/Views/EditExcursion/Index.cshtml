@model TravelBug.Models.TravelBugModel.Excursion

@{
    ViewBag.Title = "Index";
    this.Layout = "~/Views/Shared/_LayoutCastom.cshtml";
}

@using (Html.BeginForm("Index", "EditExcursion", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <h4>Excursion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="6u 12u$(4)">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "6u 12u$(4)" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Action("Item", "DropDownListEdit", new { type = "Time", id = Model.Id })


        @Html.Action("Item", "DropDownListEdit", new { type = "Language", id = Model.Id })

        @Html.Action("Item", "DropDownListEdit", new { type = "Cost", id = Model.Id })



        <!-- Two -->
        <section id="EditImage">
            @Html.Hidden("ExcursionID", Model.Id);
            @Html.Hidden("ImagesRemoveArray");
            <div>
                <header>
                    <h2>Album</h2>
                    <p>Select the pictures to delete</p>
                </header>
                <div>
                    <div>
                        @foreach (TravelBug.Models.TravelBugModel.Photo image in Model.Photo)
                        {
                            string idImage = "img" + image.ID;
                            <div>
                                @*<a class="image" id="@picture.Id" onclick="SelectPicture(this)">*@
                                <img class="edit_img" id="@idImage" src="@string.Concat("data:", image.ContentType, ";base64,") @Convert.ToBase64String(image.Image, 0, image.Image.Length)" alt="@image.FileName" />
                            </div>
                        }
                        <span class="btn btn-default RemoveImage_button" onclick="JsonRemoveImages();">Remove image</span>
                    </div>
                </div>
            </div>
        </section>

        <section id="AddImage">
            @Html.Partial("AddImagePartial")
        </section>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>




    </div>
}

<script>

    //Start json to server (Remove images)
    function JsonRemoveImages() {
        var images = document.getElementsByClassName("edit_img");
        var arr = ""; //Format = "img2 img3 "

        for (var i = 0; i < images.length; i++) {
            var style = $(images[i]).attr("style"); //images[i]["id"] + " ";

            if (style == "opacity: 0.4;") {
                arr += images[i]["id"] + " ";
            }
        }

        if (arr == "") {
            alert("Please, select images to remove.");
        } else {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                url: " /EditExcursion/JsonDeleteImages",
                data: "{ 'ImagesID': '" + arr + "', 'ExcursionID': '@Model.Id' }",
                success: OnSuccess,
                error: OnError,
            });
        }
    }

    function OnSuccess(data) {
        var images = document.getElementsByClassName("edit_img");

        for (var i = 0; i < images.length; i++) {
            var style = $(images[i]).attr("style"); //images[i]["id"] + " ";

            if (style == "opacity: 0.4;") {
                $(images[i]).remove();
            }
        }
    }

    function OnError(error) {
        //ToDo: реализовать показ ошибки у клиента
        alert("Can't remove images: " + error.exMessage);
    }
    //End json to server (Remove images)

    $(document).ready(function () {
        $(".edit_img").click(function () {
            var style = $(this).attr("style");

            if (style == "opacity: 0.4;") {
                $(this).attr("style", "opacity: 1;");
            } else {
                $(this).attr("style", "opacity: 0.4;");
            }
        });
    });
</script>

<style>
    .RemoveImage_button {
    }

    .edit_img {
        width: 10%;
    }
</style>